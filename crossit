#!/bin/bash
set -e
set -x
JOBS=$(nproc --all||echo 2)
if [ "$JOBS" = 1 ]; then
    JOBS=2
fi
git config --global --add safe.directory /cross/localrepo
pushd $(dirname $0)
basefolder=$(realpath $(dirname $0))
crossrepofolder=$(realpath $basefolder/../crossdev)
if [ ! -z "$1" ]; then
  crossenv=$1
fi
export crossenv=${crossenv:=mips64el-crossany-linux-gnuabi64}
#export crossenv=${crossenv:=x86_64-crossany-linux-gnu}
#export crossenv=${crossenv:=aarch64-crossany-linux-gnu}

#if [[ "$crossenv" = powerpc64-* ]]; then
  #BINUTILS_VERSION=2.34-r2
  #GLIBC_VERSION=${GLIBC_VERSION:=2.28}
#fi
if [[ "$crossenv" = riscv64-* ]]; then
    GLIBC_VERSION=${GLIBC_VERSION:=2.36-r8}             #2.17
    KERNEL_VERSION=${KERNEL_VERSION:=5.15-r3}           #3.18
    BINUTILS_VERSION=${BINUTILS_VERSION:=2.35.1}     #2.26-r1
fi
if [[ "$crossenv" = loongarch64-* ]]; then
    GLIBC_VERSION=${GLIBC_VERSION:=2.36-r8}             #2.17
    KERNEL_VERSION=${KERNEL_VERSION:=6.1}           #3.18
    BINUTILS_VERSION=${BINUTILS_VERSION:=2.40-r5}     #2.40-r5
    BINUTILS_STAGE3_VERSION=${BINUTILS_STAGE3_VERSION:=2.40-r5}
    GCC_VERSION=${GCC_VERSION:=12.2.1_p20230428-r1}
fi

GCC_VERSION=${GCC_VERSION:=10.2.0-r2}          #9.3.0-r1  
GLIBC_VERSION=${GLIBC_VERSION:=2.17}             #2.19-r2
KERNEL_VERSION=${KERNEL_VERSION:=3.18}
KERNEL_STAGE2_VERSION=${KERNEL_STAGE2_VERSION:=6.4}
BINUTILS_VERSION=${BINUTILS_VERSION:=2.26-r1}
BINUTILS_STAGE3_VERSION=${BINUTILS_STAGE3_VERSION:=2.35.1}
GCC_VERSION_NUM=${GCC_VERSION%%-*}

GCC_EXTRA_ECONF=--oldincludedir=/usr/$crossenv/usr/include
if [ ! -e /usr/$crossenv/sbin/ldconfig ]; then
    #ignore duplicated file /usr/share/locale/*/LC_MESSAGES/*.mo by binutils
    EXTRA_ECONF=$GCC_EXTRA_ECONF FEATURES="-collision-detect -protect-owned" crossdev --libc $GLIBC_VERSION --gcc $GCC_VERSION --kernel $KERNEL_VERSION --binutils $BINUTILS_VERSION -t  $crossenv -P "--autounmask-continue --autounmask=y --autounmask-write"
else
  echo /usr/$crossenv exists, skip to next step
fi

cat <<EOF > /usr/$crossenv/active
export crossenv=$crossenv
export OLDPATH=$PATH
export PATH=/usr/$crossenv/wrapper:/usr/$crossenv/usr/bin:/usr/$crossenv/usr/sbin:/usr/$crossenv/bin:/usr/$crossenv/sbin:$PATH
export PKG_CONFIG_PATH=/usr/$crossenv/usr/lib/pkgconfig:/usr/$crossenv/usr/share/pkgconfig
export ZLIB_INCDIR=/usr/$crossenv/usr/include
export LD_LIBRARY_PATH=/usr/lib/gcc/$crossenv/$GCC_VERSION_NUM
export LDFLAGS="-L/usr/lib/gcc/$crossenv/$GCC_VERSION_NUM -Wl,-rpath-link,/usr/lib/gcc/$crossenv/$GCC_VERSION_NUM -Wl,-rpath-link,/usr/$crossenv/usr/lib -Wl,-rpath,/usr/$crossenv/usr/lib,--enable-new-dtags"
#export LDFLAGS="-L/usr/lib/gcc/$crossenv/$GCC_VERSION_NUM -L/usr/$crossenv/usr/lib -Wl,-rpath-link,/usr/lib/gcc/$crossenv/$GCC_VERSION_NUM -Wl,-rpath-link,/usr/$crossenv/usr/lib"
#export CFLAGS=-I/usr/$crossenv/usr/lib/libffi/include
export LC_ALL=C
export QEMU_LD_PREFIX=/usr/$crossenv
/usr/$crossenv/sbin/ldconfig || echo check it
ldconfig -C /usr/$crossenv/etc/ld.so.cache  -p || echo check it
/sbin/ldconfig
echo Run the following command if you want to static link to c++ >&2
echo export LDFLAGS="\\"\\\$LDFLAGS -static-libstdc++ -static-libgcc\\"" >&2
echo Run deactive to return clean env >&2
deactive(){
   export PATH=\$OLDPATH
   unset PKG_CONFIG_PATH ZLIB_INCDIR LD_LIBRARY_PATH LDFLAGS
   /sbin/ldconfig
}
export -f deactive
EOF
ln -sf ../$crossenv/active /usr/bin/$crossenv-active
ln -sf ../$crossenv/active /usr/bin/active
#echo $crossenv > currenttarget
cp -avf /etc/portage/repos.conf/ /usr/$crossenv/etc/portage/
if $(grep ^GENTOO_MIRRORS /etc/portage/make.conf >/dev/null 2>/dev/null); then
  grep ^GENTOO_MIRRORS /usr/$crossenv/etc/portage/make.conf >/dev/null 2>/dev/null || grep ^GENTOO_MIRRORS /etc/portage/make.conf >> /usr/$crossenv/etc/portage/make.conf
fi
if [ -e /etc/portage/mirrors ]; then
  /bin/cp -avf /etc/portage/mirrors /usr/$crossenv/etc/portage/mirrors
fi

if [[ "${crossenv%%-*}" = "$(uname -m)" ]]; then
    echo ignore >&2
else
    # export LD_LIBRARY_PATH=/usr/lib/gcc/$crossenv/$GCC_VERSION_NUM
    echo  /usr/lib/gcc/$crossenv/$GCC_VERSION_NUM/>/etc/ld.so.conf.d/06-$crossenv-gcc.conf >&2
    echo  /usr/$crossenv/lib/>/etc/ld.so.conf.d/06-$crossenv-cross.conf >&2
    echo  /usr/$crossenv/lib64/>>/etc/ld.so.conf.d/06-$crossenv-cross.conf >&2
    echo  /usr/$crossenv/usr/lib/>>/etc/ld.so.conf.d/06-$crossenv-cross.conf >&2 
    echo  /usr/$crossenv/usr/lib64/>>/etc/ld.so.conf.d/06-$crossenv-cross.conf >&2
    /sbin/ldconfig
    /usr/$crossenv/sbin/ldconfig || echo check it
    ln -s /usr/$crossenv/lib64/ld*.so.1 /lib64/ || echo handle it your self: ln -s /usr/$crossenv/lib64/ld*.so.1 /lib64/
    ln -s /usr/$crossenv/lib/ld*.so.1 /lib/ || echo handle it your self: ln -s /usr/$crossenv/lib/ld*.so.1 /lib/
fi
mkdir -p /usr/gnemul
ln -sf /usr/$crossenv /usr/gnemul/qemu-${crossenv%%-*}

source /usr/bin/$crossenv-active
$crossenv-emerge -vn -j$JOBS --autounmask-continue --autounmask=y --autounmask-write =sys-libs/glibc-$GLIBC_VERSION =sys-kernel/linux-headers-$KERNEL_VERSION =dev-lang/perl-5.36.0-r2
USE="static-libs" $crossenv-emerge -vn -j$JOBS --autounmask-continue --autounmask=y --autounmask-write =sys-devel/binutils-$BINUTILS_STAGE3_VERSION
#emerge -v -j$JOBS  --autounmask-continue --autounmask=y --autounmask-write =cross-$crossenv/binutils-$BINUTILS_STAGE3_VERSION
USE="-multicall readline" $crossenv-emerge -vn -j$JOBS --autounmask-continue --autounmask=y --autounmask-write =dev-libs/openssl-3.0.9-r1 =sys-apps/coreutils-9.1-r2 sys-libs/readline app-shells/bash awk sys-apps/sed sys-apps/which dev-libs/libffi acct-group/nobody
cp -avf /usr/$crossenv/usr/lib/libffi/include/* /usr/$crossenv/usr/include || echo check it
USE="su pam" LDFLAGS=-L/usr/$crossenv/usr/lib CFLAGS=-L/usr/$crossenv/usr/lib/libffi/include PYTHON_TARGETS=python3_11 $crossenv-emerge -vn -j$JOBS --autounmask-continue --autounmask=y --autounmask-write  ='dev-lang/python-3.11*' dev-python/pip =sys-apps/util-linux-2.38.1-r2 =sys-libs/glibc-$GLIBC_VERSION

mkdir -p /usr/$crossenv/usr/bin/backup
for app in mv cp touch python bzip2 xz gzip sed gsed awk bunzip2 gunzip gawk which cat echo ls rm; do
if [ -e /usr/$crossenv/bin/$app ]; then
  /bin/mv /usr/$crossenv/bin/$app /usr/$crossenv/usr/bin/backup
fi
done
echo export PATH=\$PATH:/usr/bin/backup > /usr/$crossenv/etc/bash/bashrc.d/backup.sh

mkdir -p /usr/$crossenv/wrapper
pushd /usr/$crossenv/wrapper
    for f in $(ls /usr/bin/$crossenv-*|grep -v emerge|grep -v pkg-config); do
      echo $f
      basename  $f|sed "s/^$crossenv-//g"
      ln -fs "$f" "$(basename $f|sed "s/^$crossenv-//g")"
    done
    #wrapper it to remove ourself from path otherwise there will be endingless loop
    cat <<EOF > pkg-config
#!/bin/sh
CC=/usr/bin/$crossenv-gcc PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/$crossenv/usr/bin:/usr/$crossenv/usr/sbin:/usr/$crossenv/bin /usr/bin/$crossenv-pkg-config "\$@"
EOF
    chmod +x pkg-config
    cat <<EOF > emerge
#!/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/$crossenv/usr/bin:/usr/$crossenv/usr/sbin:/usr/$crossenv/bin /usr/bin/$crossenv-emerge "\$@"
EOF
    chmod +x emerge
    cat <<EOF > ldconfig
/usr/$crossenv/sbin/ldconfig || echo check it
ldconfig -C /usr/$crossenv/etc/ld.so.cache  -p || echo check it
/sbin/ldconfig
EOF
    chmod +x ldconfig
    ln -sf ../usr/bin/uname .
    ln -sf ../usr/bin/ldd .
    ln -sf gcc cc
    ln -sf g++ c++
popd
#emerge --autounmask-continue --autounmask=y --autounmask-write '=python-3.11*'
#etc-update --automode -5
#emerge -vn -j$JOBS libffi '=python-3.11*'


# chroot, need run docker with --priviledged
cat <<EOF > /usr/bin/$crossenv-chrootit
#!/bin/bash
cd /usr/$crossenv
mkdir -p proc dev cross sys tmp
mount -o bind /proc proc
mount -o bind /dev dev
mount -o bind /sys sys
#mount -o bind /usr/portage usr/portage
#mount -o bind /usr/local/portage usr/local/portage
#mount -o bind /lib/modules lib/modules
cp /etc/resolv.conf etc/resolv.conf
#mount -o bind /tmp tmp
#mount -o bind /dev/pts dev/pts #only for X

mkdir -p cross
mount -o bind /cross cross
unset QEMU_LD_PREFIX
if [ -z "\$1" ]; then
  /usr/bin/chroot . /bin/bash -i
else
  /usr/bin/chroot . \$@
fi

umount cross
#umount dev/pts
#umount tmp
#umount lib/modules
#umount usr/local/portage
#umount usr/portage
umount sys
umount dev
umount proc
EOF
chmod +x /usr/bin/$crossenv-chrootit

/usr/$crossenv/wrapper/ldconfig
#locales
#$crossenv-emerge -v -j$JOBS --autounmask-continue --autounmask=y --autounmask-write =sys-kernel/linux-headers-$KERNEL_STAGE2_VERSION
USE="-systemd -readline" $crossenv-emerge -vn -j$JOBS  --autounmask-continue --autounmask=y --autounmask-write app-arch/gzip =virtual/udev-217 =sys-fs/udev-init-scripts-32  =sys-apps/openrc-0.42.1 =virtual/tmpfiles-0
if [ -e /usr/$crossenv/bin/gzip ]; then
  /bin/mv /usr/$crossenv/bin/gzip /usr/$crossenv/usr/bin/backup
fi
#USE="-systemd" $crossenv-emerge -vn -j$JOBS  bash awk app-arch/gzip =sys-apps/openrc-0.42.1
#$crossenv-emerge -v -j$JOBS --autounmask-continue --autounmask=y --autounmask-write =sys-kernel/linux-headers-$KERNEL_VERSION
#cp -avf /usr/lib64/locale/locale-archive /usr/$crossenv/usr/lib64/locale/locale-archive
sort -u /etc/locale.gen >/usr/$crossenv/etc/locale.gen
/usr/sbin/locale-gen
echo "/sbin/ldconfig;/usr/sbin/locale-gen"|/usr/bin/$crossenv-chrootit|| echo check it

#hacked glibc to load /usr/lib/locale/locale-archive.${GLIBC_VERSION%%-*} first
ln -sf /usr/$crossenv/usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.${GLIBC_VERSION%%-*}


isDocker(){
    local cgroup=/proc/1/cgroup
    test -f $cgroup && [[ "$(<$cgroup)" = *:cpuset:/docker/* ]]
}

isDockerBuildkit(){
    local cgroup=/proc/1/cgroup
    test -f $cgroup && [[ "$(<$cgroup)" = *:cpuset:/docker/buildkit/* ]]
}

isDockerContainer(){
    [ -e /.dockerenv ]
}
#if isDockerBuildkit; then
  rm -rf /var/tmp/* /var/log/* /var/cache/*/*
  rm -rf /usr/*/var/tmp/* /usr/*/var/log/* /usr/*/var/cache/*/*
#fi
echo Run following command to enable cross env
echo source /usr/$crossenv/active
popd
